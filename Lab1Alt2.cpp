#include <iostream>
#include <algorithm>
#include <cstdlib>
#include <ctime>
#include <cstring>

using namespace std;

int main()
{
    int Q = 10;
    int Omega[15] = { 2, 5, 1, 2, 2, 0, 0, 4, 1, 3, 3, 7, 2, 5, 7 };
    int ves[300][15];
    int sum[300] = {0};
    int mycifra[15] = {1,0,1,1,0,1,1,1,1,0,0,1,0,0,1}; // Моя цифра 4 - по заданию
    int check[15] = {0};
    int sumCheck = 0;

    int cifri[10][15] = 
    {
        {1,1,1,1,0,1,1,0,1,1,0,1,1,1,1}, // 0
        {0,0,1,0,1,1,1,0,1,0,0,1,0,0,1}, // 1
        {1,1,1,0,0,1,1,1,1,1,0,0,1,1,1}, // 2
        {1,1,1,0,0,1,1,1,1,0,0,1,1,1,1}, // 3
        {1,0,1,1,0,1,1,1,1,0,0,1,0,0,1}, // 4
        {1,1,1,1,0,0,1,1,1,0,0,1,1,1,1}, // 5 
        {1,1,1,1,0,0,1,1,1,1,0,1,1,1,1}, // 6
        {1,1,1,0,0,1,0,1,0,0,1,0,0,1,0}, // 7
        {1,1,1,1,0,1,1,1,1,1,0,1,1,1,1}, // 8
        {1,1,1,1,0,1,1,1,1,0,0,1,1,1,1}  // 9
    };

    int randommassiv[300] = 
    {
        // Initializing randommassiv with the same values as before
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
        3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
        4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
        5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
        8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
        9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
    };
    int viborka[300][15];

    // Перемешиваем массив случайным образом
    random_shuffle(randommassiv, randommassiv + 300);

    // Формирование выборки
    for (int i = 0; i < 300; i++)
    {
        for (int j = 0; j < 15; j++)
        {
            viborka[i][j] = cifri[randommassiv[i]][j];
        }
    }

    // Первая итерация пересчета
    for (int i = 0; i < 300; i++)
    {
        for (int j = 0; j < 15; j++)
        {
            ves[i][j] = viborka[i][j] * Omega[j];
            sum[i] += ves[i][j];
        }
    }

    // Вывод сумм после первой итерации
    for (int i = 0; i < 300; i++)
    {
        cout << i + 1 << ' ' << sum[i] << endl;
    }

    // Обновление весов
    for (int i = 0; i < 300; i++) 
    {
        for (int j = 0; j < 15; j++) 
        {
            bool isEqual = (viborka[i][j] == mycifra[j]);
            if (isEqual && sum[i] <= Q)
            {
                Omega[j] += viborka[i][j];
            }
            else if (!isEqual && sum[i] > Q)
            {
                Omega[j] -= viborka[i][j];
                if (Omega[j] < 0) Omega[j] = 0;  // Не допускаем отрицательные значения
            }
        }
    }

    // Вывод обновленных весов
    cout << "Updated Omega: ";
    for (int i = 0; i < 15; i++)
    {
        cout << Omega[i] << ' ';
    }
    cout << endl;

    // Второй пересчет сумм
    memset(sum, 0, sizeof(sum));  // Сброс сумм
    memset(ves, 0, sizeof(ves));

    for (int i = 0; i < 300; i++)
    {
        for (int j = 0; j < 15; j++)
        {
            ves[i][j] = viborka[i][j] * Omega[j];
            sum[i] += ves[i][j];
        }
    }

    // Вывод сумм после второго пересчета
    for (int i = 0; i < 300; i++)
    {
        cout << i + 1 << ' ' << sum[i] << endl;
    }

    // Проверка результата
    sumCheck = 0;
    for (int i = 0; i < 15; i++)
    {
        check[i] = mycifra[i] * Omega[i];
        sumCheck += check[i];
    }

    cout << "Check status: ";
    if (sumCheck > Q)
    {
        cout << "Yes";
    }
    else
    {
        cout << "No";
    }
    cout << endl;

    return 0;
}
